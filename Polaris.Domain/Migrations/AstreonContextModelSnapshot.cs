// <auto-generated />
using System;
using Polaris.Domain.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Polaris.Domain.Migrations
{
    [DbContext(typeof(PolarisContext))]
    partial class PolarisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Polaris.Domain.Entity.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_APPLICATION");

                    b.ToTable("application", (string)null);
                });

            modelBuilder.Entity("Polaris.Domain.Entity.Authentication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<int?>("CodeAttempt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("codeAttempt");

                    b.Property<DateTime?>("CodeExpiration")
                        .HasColumnType("datetime")
                        .HasColumnName("codeExpiration");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("memberId");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("refreshToken");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK_AUTHENTICATION");

                    b.HasIndex(new[] { "MemberId" }, "UQ_AUTHENTICATION_MEMBER")
                        .IsUnique();

                    b.ToTable("authentication", (string)null);
                });

            modelBuilder.Entity("Polaris.Domain.Entity.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("applicationId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK_MEMBER");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("UserId");

                    b.ToTable("member", (string)null);
                });

            modelBuilder.Entity("Polaris.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("language");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_USER");

                    b.HasIndex(new[] { "Email" }, "UQ_USER_EMAIL")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Polaris.Domain.Entity.Authentication", b =>
                {
                    b.HasOne("Polaris.Domain.Entity.Member", "MemberNavigation")
                        .WithOne("AuthenticationNavigation")
                        .HasForeignKey("Polaris.Domain.Entity.Authentication", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AUTHENTICATION_MEMBER");

                    b.Navigation("MemberNavigation");
                });

            modelBuilder.Entity("Polaris.Domain.Entity.Member", b =>
                {
                    b.HasOne("Polaris.Domain.Entity.Application", "ApplicationNavigation")
                        .WithMany("MemberNavigation")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK_MEMBER_APPLICATION");

                    b.HasOne("Polaris.Domain.Entity.User", "UserNavigation")
                        .WithMany("MemberNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MEMBER_USER");

                    b.Navigation("ApplicationNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("Polaris.Domain.Entity.Application", b =>
                {
                    b.Navigation("MemberNavigation");
                });

            modelBuilder.Entity("Polaris.Domain.Entity.Member", b =>
                {
                    b.Navigation("AuthenticationNavigation")
                        .IsRequired();
                });

            modelBuilder.Entity("Polaris.Domain.Entity.User", b =>
                {
                    b.Navigation("MemberNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
